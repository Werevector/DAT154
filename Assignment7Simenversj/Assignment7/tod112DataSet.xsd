<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="tod112DataSet" targetNamespace="http://tempuri.org/tod112DataSet.xsd" xmlns:mstns="http://tempuri.org/tod112DataSet.xsd" xmlns="http://tempuri.org/tod112DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="tod112ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="tod112ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Assignment7.Properties.Settings.GlobalReference.Default.tod112ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="courseTableAdapter" GeneratorDataComponentClassName="courseTableAdapter" Name="course" UserDataComponentName="courseTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="tod112ConnectionString (Settings)" DbObjectName="tod112.dbo.course" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[course] WHERE (([coursecode] = @Original_coursecode) AND ([coursename] = @Original_coursename) AND ([semester] = @Original_semester) AND ([teacher] = @Original_teacher))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_coursename" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="coursename" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_semester" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teacher" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[course] ([coursecode], [coursename], [semester], [teacher]) VALUES (@coursecode, @coursename, @semester, @teacher);
SELECT coursecode, coursename, semester, teacher FROM dbo.course WHERE (coursecode = @coursecode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@coursename" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="coursename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@semester" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teacher" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT coursecode, coursename, semester, teacher FROM dbo.course</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[course] SET [coursecode] = @coursecode, [coursename] = @coursename, [semester] = @semester, [teacher] = @teacher WHERE (([coursecode] = @Original_coursecode) AND ([coursename] = @Original_coursename) AND ([semester] = @Original_semester) AND ([teacher] = @Original_teacher));
SELECT coursecode, coursename, semester, teacher FROM dbo.course WHERE (coursecode = @coursecode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@coursename" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="coursename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@semester" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teacher" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_coursename" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="coursename" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_semester" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="semester" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teacher" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="coursecode" DataSetColumn="coursecode" />
              <Mapping SourceColumn="coursename" DataSetColumn="coursename" />
              <Mapping SourceColumn="semester" DataSetColumn="semester" />
              <Mapping SourceColumn="teacher" DataSetColumn="teacher" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gradeTableAdapter" GeneratorDataComponentClassName="gradeTableAdapter" Name="grade" UserDataComponentName="gradeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="tod112ConnectionString (Settings)" DbObjectName="tod112.dbo.grade" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[grade] WHERE (([studentid] = @Original_studentid) AND ([coursecode] = @Original_coursecode) AND ([grade] = @Original_grade))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[grade] ([studentid], [coursecode], [grade]) VALUES (@studentid, @coursecode, @grade);
SELECT studentid, coursecode, grade FROM dbo.grade WHERE (coursecode = @coursecode) AND (studentid = @studentid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT studentid, coursecode, grade FROM dbo.grade</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[grade] SET [studentid] = @studentid, [coursecode] = @coursecode, [grade] = @grade WHERE (([studentid] = @Original_studentid) AND ([coursecode] = @Original_coursecode) AND ([grade] = @Original_grade));
SELECT studentid, coursecode, grade FROM dbo.grade WHERE (coursecode = @coursecode) AND (studentid = @studentid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@grade" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_coursecode" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="coursecode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_grade" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="studentid" DataSetColumn="studentid" />
              <Mapping SourceColumn="coursecode" DataSetColumn="coursecode" />
              <Mapping SourceColumn="grade" DataSetColumn="grade" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="studentTableAdapter" GeneratorDataComponentClassName="studentTableAdapter" Name="student" UserDataComponentName="studentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="tod112ConnectionString (Settings)" DbObjectName="tod112.dbo.student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[student] WHERE (([id] = @Original_id) AND ([studentname] = @Original_studentname) AND ([studentage] = @Original_studentage))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[student] ([id], [studentname], [studentage]) VALUES (@id, @studentname, @studentage);
SELECT id, studentname, studentage FROM dbo.student WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentage" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, studentname, studentage FROM dbo.student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[student] SET [id] = @id, [studentname] = @studentname, [studentage] = @studentage WHERE (([id] = @Original_id) AND ([studentname] = @Original_studentname) AND ([studentage] = @Original_studentage));
SELECT id, studentname, studentage FROM dbo.student WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@studentname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@studentage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentage" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_studentname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="studentname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_studentage" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="studentage" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="studentname" DataSetColumn="studentname" />
              <Mapping SourceColumn="studentage" DataSetColumn="studentage" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="tod112DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="tod112DataSet" msprop:Generator_UserDSName="tod112DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="course" msprop:Generator_TableClassName="courseDataTable" msprop:Generator_TableVarName="tablecourse" msprop:Generator_TablePropName="course" msprop:Generator_RowDeletingName="courseRowDeleting" msprop:Generator_RowChangingName="courseRowChanging" msprop:Generator_RowEvHandlerName="courseRowChangeEventHandler" msprop:Generator_RowDeletedName="courseRowDeleted" msprop:Generator_UserTableName="course" msprop:Generator_RowChangedName="courseRowChanged" msprop:Generator_RowEvArgName="courseRowChangeEvent" msprop:Generator_RowClassName="courseRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="coursecode" msprop:Generator_ColumnVarNameInTable="columncoursecode" msprop:Generator_ColumnPropNameInRow="coursecode" msprop:Generator_ColumnPropNameInTable="coursecodeColumn" msprop:Generator_UserColumnName="coursecode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="coursename" msprop:Generator_ColumnVarNameInTable="columncoursename" msprop:Generator_ColumnPropNameInRow="coursename" msprop:Generator_ColumnPropNameInTable="coursenameColumn" msprop:Generator_UserColumnName="coursename">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="semester" msprop:Generator_ColumnVarNameInTable="columnsemester" msprop:Generator_ColumnPropNameInRow="semester" msprop:Generator_ColumnPropNameInTable="semesterColumn" msprop:Generator_UserColumnName="semester">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="teacher" msprop:Generator_ColumnVarNameInTable="columnteacher" msprop:Generator_ColumnPropNameInRow="teacher" msprop:Generator_ColumnPropNameInTable="teacherColumn" msprop:Generator_UserColumnName="teacher">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="grade" msprop:Generator_TableClassName="gradeDataTable" msprop:Generator_TableVarName="tablegrade" msprop:Generator_TablePropName="grade" msprop:Generator_RowDeletingName="gradeRowDeleting" msprop:Generator_RowChangingName="gradeRowChanging" msprop:Generator_RowEvHandlerName="gradeRowChangeEventHandler" msprop:Generator_RowDeletedName="gradeRowDeleted" msprop:Generator_UserTableName="grade" msprop:Generator_RowChangedName="gradeRowChanged" msprop:Generator_RowEvArgName="gradeRowChangeEvent" msprop:Generator_RowClassName="gradeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="studentid" msprop:Generator_ColumnVarNameInTable="columnstudentid" msprop:Generator_ColumnPropNameInRow="studentid" msprop:Generator_ColumnPropNameInTable="studentidColumn" msprop:Generator_UserColumnName="studentid" type="xs:int" />
              <xs:element name="coursecode" msprop:Generator_ColumnVarNameInTable="columncoursecode" msprop:Generator_ColumnPropNameInRow="coursecode" msprop:Generator_ColumnPropNameInTable="coursecodeColumn" msprop:Generator_UserColumnName="coursecode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="6" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="grade" msprop:Generator_ColumnVarNameInTable="columngrade" msprop:Generator_ColumnPropNameInRow="grade" msprop:Generator_ColumnPropNameInTable="gradeColumn" msprop:Generator_UserColumnName="grade">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="student" msprop:Generator_TableClassName="studentDataTable" msprop:Generator_TableVarName="tablestudent" msprop:Generator_TablePropName="student" msprop:Generator_RowDeletingName="studentRowDeleting" msprop:Generator_RowChangingName="studentRowChanging" msprop:Generator_RowEvHandlerName="studentRowChangeEventHandler" msprop:Generator_RowDeletedName="studentRowDeleted" msprop:Generator_UserTableName="student" msprop:Generator_RowChangedName="studentRowChanged" msprop:Generator_RowEvArgName="studentRowChangeEvent" msprop:Generator_RowClassName="studentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="studentname" msprop:Generator_ColumnVarNameInTable="columnstudentname" msprop:Generator_ColumnPropNameInRow="studentname" msprop:Generator_ColumnPropNameInTable="studentnameColumn" msprop:Generator_UserColumnName="studentname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studentage" msprop:Generator_ColumnVarNameInTable="columnstudentage" msprop:Generator_ColumnPropNameInRow="studentage" msprop:Generator_ColumnPropNameInTable="studentageColumn" msprop:Generator_UserColumnName="studentage" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:course" />
      <xs:field xpath="mstns:coursecode" />
    </xs:unique>
    <xs:unique name="grade_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:grade" />
      <xs:field xpath="mstns:studentid" />
      <xs:field xpath="mstns:coursecode" />
    </xs:unique>
    <xs:unique name="student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:student" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="fk_course" msdata:parent="course" msdata:child="grade" msdata:parentkey="coursecode" msdata:childkey="coursecode" msprop:Generator_UserChildTable="grade" msprop:Generator_ChildPropName="GetgradeRows" msprop:Generator_UserRelationName="fk_course" msprop:Generator_ParentPropName="courseRow" msprop:Generator_RelationVarName="relationfk_course" msprop:Generator_UserParentTable="course" />
      <msdata:Relationship name="fk_student" msdata:parent="student" msdata:child="grade" msdata:parentkey="id" msdata:childkey="studentid" msprop:Generator_UserChildTable="grade" msprop:Generator_ChildPropName="GetgradeRows" msprop:Generator_UserRelationName="fk_student" msprop:Generator_RelationVarName="relationfk_student" msprop:Generator_UserParentTable="student" msprop:Generator_ParentPropName="studentRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>